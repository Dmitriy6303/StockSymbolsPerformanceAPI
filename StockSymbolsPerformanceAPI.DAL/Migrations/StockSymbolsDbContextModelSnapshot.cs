// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace StockSymbolsPerformanceAPI.DAL.Migrations
{
    [DbContext(typeof(StockSymbolsDbContext))]
    partial class StockSymbolsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockSymbolsPerformanceAPI.DAL.Entities.StockSymbol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("StockSymbols");
                });

            modelBuilder.Entity("StockSymbolsPerformanceAPI.DAL.Entities.TimeSeries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Close")
                        .HasColumnType("float");

                    b.Property<double>("High")
                        .HasColumnType("float");

                    b.Property<double>("Low")
                        .HasColumnType("float");

                    b.Property<double>("Open")
                        .HasColumnType("float");

                    b.Property<long>("StockSymbolId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StockSymbolId");

                    b.ToTable("TimeSeries");
                });

            modelBuilder.Entity("StockSymbolsPerformanceAPI.DAL.Entities.TimeSeries", b =>
                {
                    b.HasOne("StockSymbolsPerformanceAPI.DAL.Entities.StockSymbol", "StockSymbol")
                        .WithMany("TimeSeries")
                        .HasForeignKey("StockSymbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockSymbol");
                });

            modelBuilder.Entity("StockSymbolsPerformanceAPI.DAL.Entities.StockSymbol", b =>
                {
                    b.Navigation("TimeSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
